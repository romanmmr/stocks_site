[
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Thanks for checking out my web site!"
  },
  {
    "objectID": "tables.html#project-2",
    "href": "tables.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "tables.html#project-3",
    "href": "tables.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "tables.html",
    "href": "tables.html",
    "title": "About Me",
    "section": "",
    "text": "Thanks for checking out my web site!"
  },
  {
    "objectID": "docs/hello.html",
    "href": "docs/hello.html",
    "title": "Notebook",
    "section": "",
    "text": "import pandas as pd\nfrom IPython.display import Markdown\ntest_csv = pd.read_csv(\"test_csv.csv\")\nMarkdown(test_csv.to_markdown(index=False))"
  },
  {
    "objectID": "docs/hello.html#polar-axis",
    "href": "docs/hello.html#polar-axis",
    "title": "Notebook",
    "section": "Polar Axis",
    "text": "Polar Axis\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n\n\n\nCode\ndf=pd.DataFrame([[1,2,3],[4,5,6],[7,8,9]], columns=['a', 'b', 'c'])\ndf\n\n\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n4\n5\n6\n\n\n2\n7\n8\n9"
  },
  {
    "objectID": "docs/display_data_test.html",
    "href": "docs/display_data_test.html",
    "title": "Notebook",
    "section": "",
    "text": "Code\nimport pandas as pd\nfrom IPython.display import Markdown\ntest_csv = pd.read_csv(\"test_csv.csv\")\ntest_csv = test_csv.tail()\nMarkdown(test_csv.to_markdown(index=False))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDate\nOpen\nHigh\nLow\nClose\nVolume\nDividends\nStock Splits\n\n\n\n\n2024-05-09 00:00:00+02:00\n11112.7\n11121.9\n11004.9\n11050.1\n212325300\n0\n0\n\n\n2024-05-10 00:00:00+02:00\n11045.9\n11137.7\n11045.1\n11105.5\n155650400\n0\n0\n\n\n2024-05-13 00:00:00+02:00\n11104.2\n11152\n11073.9\n11152\n106337500\n0\n0\n\n\n2024-05-14 00:00:00+02:00\n11180.5\n11246.3\n11138.4\n11239.3\n137103300\n0\n0\n\n\n2024-05-15 00:00:00+02:00\n11260.9\n11377\n11260.3\n11362.8\n159465788\n0\n0"
  },
  {
    "objectID": "docs/display_data_test.html#polar-axis",
    "href": "docs/display_data_test.html#polar-axis",
    "title": "Notebook",
    "section": "Polar Axis",
    "text": "Polar Axis\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n\n\n\nCode\ndf=pd.DataFrame([[1,2,3],[4,5,6],[7,8,9]], columns=['a', 'b', 'c'])\ndf\n\n\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n4\n5\n6\n\n\n2\n7\n8\n9"
  },
  {
    "objectID": "docs/testing_notebook.html",
    "href": "docs/testing_notebook.html",
    "title": "Notebook - test",
    "section": "",
    "text": "Code\nimport pandas as pd\nfrom IPython.display import Markdown\ntest_csv = pd.read_csv(\"test_csv.csv\")\ntest_csv = test_csv.tail()\nMarkdown(test_csv.to_markdown(index=False))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDate\nOpen\nHigh\nLow\nClose\nVolume\nDividends\nStock Splits\n\n\n\n\n2024-05-09 00:00:00+02:00\n11112.7\n11121.9\n11004.9\n11050.1\n212325300\n0\n0\n\n\n2024-05-10 00:00:00+02:00\n11045.9\n11137.7\n11045.1\n11105.5\n155650400\n0\n0\n\n\n2024-05-13 00:00:00+02:00\n11104.2\n11152\n11073.9\n11152\n106337500\n0\n0\n\n\n2024-05-14 00:00:00+02:00\n11180.5\n11246.3\n11138.4\n11239.3\n137103300\n0\n0\n\n\n2024-05-15 00:00:00+02:00\n11260.9\n11377\n11260.3\n11362.8\n159465788\n0\n0\n\n\n\n\n\n\n\nCode\ndf=pd.DataFrame([[1,2,3],[4,5,6],[7,8,9]], columns=['a', 'b', 'c'])\ndf\n\n\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n4\n5\n6\n\n\n2\n7\n8\n9"
  },
  {
    "objectID": "docs/arima_model.html",
    "href": "docs/arima_model.html",
    "title": "Notebook",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom display_data import plot_fit_and_forecast, table_horizontal, plot_sample_data"
  },
  {
    "objectID": "docs/arima_model.html#latest-stock-values-for-analysis",
    "href": "docs/arima_model.html#latest-stock-values-for-analysis",
    "title": "Notebook",
    "section": "Latest stock values for analysis",
    "text": "Latest stock values for analysis\nThese are the lates values we used for our analysis.\n\n\nCode\nplot_sample_data(path='arima_fitted_data.csv', column='Close')\n\n\n\n\n\n\n\n\n\n\nClose\n\n\nDate\n\n\n\n\n\n2024-04-25\n10890.200195\n\n\n2024-05-02\n11100.799805\n\n\n2024-05-09\n10917.500000\n\n\n2024-05-16\n11152.000000\n\n\n2024-05-23\n11339.500000"
  },
  {
    "objectID": "docs/arima_model.html#test-over-last-8-weeks",
    "href": "docs/arima_model.html#test-over-last-8-weeks",
    "title": "Notebook",
    "section": "Test over last 8 weeks",
    "text": "Test over last 8 weeks\nWe keep data from last 8 weeks ‘unseen’ by our arima model.  This means that the model doesn’t know the last 8 values. The hypothetical present of our model is 8 weeks in the past.  In that hypothetical present, if we could see the future we would see the last 8 weeks.\n\n\nCode\ntable_horizontal(path='arima_fitted_data.csv', column='Close', display_weeks=16)\n\n\n\n\n\n\n\n\n\nDate\n2024-02-08\n2024-02-15\n2024-02-22\n2024-02-29\n2024-03-07\n2024-03-14\n2024-03-21\n2024-03-28\n2024-04-04\n2024-04-11\n2024-04-18\n2024-04-25\n2024-05-02\n2024-05-09\n2024-05-16\n2024-05-23\n\n\n\n\nif we knew the future\n9941.299805\n9984.700195\n9944.799805\n10138.400391\n10069.799805\n10325.700195\n10596.700195\n10952.200195\n10975.599609\n10911.799805\n10687.200195\n10890.200195\n11100.799805\n10917.5\n11152.0\n11339.5\n\n\nhypothetical present\n9941.2998046875\n9984.7001953125\n9944.7998046875\n10138.400390625\n10069.7998046875\n10325.7001953125\n10596.7001953125\n10952.2001953125\n?\n?\n?\n?\n?\n?\n?\n?"
  },
  {
    "objectID": "docs/arima_model.html#plot-real-vales-vs-model-output-and-confidence-intervals",
    "href": "docs/arima_model.html#plot-real-vales-vs-model-output-and-confidence-intervals",
    "title": "Notebook",
    "section": "Plot real vales vs model output and confidence intervals",
    "text": "Plot real vales vs model output and confidence intervals\nThis is a plot of the real values (in blue) and the model output (in green) and the confident intervals (in red)\n\n\nCode\nplot_fit_and_forecast(path='arima_fitted_data.csv', column='Close', display_weeks=16)"
  }
]